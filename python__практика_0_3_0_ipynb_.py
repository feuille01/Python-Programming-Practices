# -*- coding: utf-8 -*-
"""Python  "Практика 0.3.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j2wg13liWDryTtSNVWTqwaPaFxNHhInD

ФИО
"""

print("Цепелев Кирилл Сергеевич")

"""**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**

# **Задача 1.**

Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.

***Нельзя использовать: len(), min(), max(), average(), sum()***

Дано:
```
1 2 3 4 5 6 7
```
Вывод:

```
Сумма чисел: 28
Среднее арифм.: 4.0
Максимальное значение: 7
```
"""

a = list(map(int, input("Введите числа: ").split()))
sum1 = 0
count = 0

for x in a:
    sum1 = sum1 + x
    count=count+1
print(sum1)

aver = sum1 / count
print(aver)

maximum = a[0]
for i in a:
    if i > maximum:
       maximum = i
print(maximum)

"""# **Задача 2.**

Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.

Ввод:

```
апельсин мандарин яблоко
```

Вывод:

```
яблоко мандарин апельсин
```
"""

#print(input("Введите список слов через пробел: ").split()[::-1])

#strings = (input("Введите слова: "))
#strings = ["апельсин", "мандарин", "апельсин"]
#reverse_list_strings(strings)

# def reverse_list_strings(lst):
#      reversed_list = lst[::-1]
#      for item in reversed_list:
#          print(item)
# # #A = list(map(int, input().split()))
# strings = list(input("Введите слова: ").split())
# #print(strings)
# reverse_list_strings(strings)

a = input("Введите список слов: ").split()

rvrs_a = ' '.join(a[::-1])

print(rvrs_a)

"""# **Задача 3**

Простой чат-бот
Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.

Чат бот может:

- помогать складывать числа
- подсказывать фильм, музыку и тд (из заранее созданного списка)
- создавать список дел (а также выводить его, обновлять, очищать)

Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру

*Реализовать без использования функций*

Пример:

Ввод:

```
Олег, какую мызыку посоветуешь?
```

Вывод:

```
Я бы посоветовал вам: Led Zeppelin Stairway to Heaven
```
"""

import random

film_list = ["Побег из Шоушенка", "Крёстный отец", "Тёмный рыцарь", "Однажды в Америке", "Крёстный отец 2"]
music_list = ["Best Friends - The Weeknd", "Can't Feel My Face - The Weeknd", "Руки Вверх - Он тебя целует"]

todo_list = []

answer = input("""Здравствуйте! Меня зовут Олег\nЯ могу:\n1. Cложить два числа\n2. Подсказать вам фильм или музыку\n3. Cоставить список дел.\n
Введите номер команды: """)

if answer == "1":
    numbers = input("Введите два числа через пробел: ").split()
    if len(numbers) == 2:
        try:
            result = float(numbers[0]) + float(numbers[1])
            print(f"Сумма этих чисел равна {result}")
        except ValueError:
            print("Пожалуйста, убедитесь, что вы ввели числа корректно.")
    else:
        print("Введите, пожалуйста, два числа.")

elif answer == "2":
    recomend = input("Музыка или Фильм? ").lower()
    if recomend == "фильм":
        number = random.randrange(0, len(film_list))
        print(f"Выпал фильм: {film_list[number]}.")
    elif recomend == "музыка":
        number = random.randrange(0, len(music_list))
        print(f"Выпала песня: {music_list[number]}.")
    else:
        print("Пожалуйста, укажите: 'музыка' или 'фильм'.")

elif answer == "3":
    while True:
        task = input("Введите задачу для своего списка дел ('выход' для завершения): ")
        if task.lower() == 'выход':
            break
        todo_list.append(task)
        print(f"Задача '{task}' добавлена в список дел.")

    print("Ваш список дел:")
    for idx, item in enumerate(todo_list, start=1):
        print(f"{idx}. {item}")

    clear_list = input("Хотите очистить список дел? (да/нет): ").lower()
    if clear_list == "да":
        todo_list.clear()
        print("Список дел был очищен.")
    else:
        print("Список дел не был изменён.")
else:
    print("Некорректная команда. Пожалуйста, попробуйте снова.")

"""# **Задача 4.**

Камень, ножницы, бумага

Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.

**Этап 1:**

Определение победителя

**Этап 2:**
  
Игра до 3 побед


Ввод для "Этап 1":

```
Камень
```

Вывод:

```
Компьютер: Ножницы
Игрок: Камень
Победа: Игрок
```
"""

import random
scruser = 0
scrcomp = 0

while scruser<3 and scrcomp<3:
  user = input("камень, ножницы или бумага? \n")
  user = user.lower()
  variants = ["камень", "ножницы", "бумага"]
  comp = random.choice(variants)
  print(f"Противник выбрал {comp}.")

  if user == comp:
      print(f"Оба выбрали {user}. Результат - Ничья!")
  elif user == "камень":
      if comp == "ножницы":
          print("Камень бьет ножницы! Вы победили!")
          scruser = scruser + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
      else:
          print("Бумага на камень! Вы проиграли.")
          scrcomp = scrcomp + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
  elif user == "бумага":
      if comp == "камень":
          scruser = scruser + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
          print("Бумага на камень! Вы победили!")
      else:
          print("Ножницы режут бумагу! Вы проиграли.")
          scrcomp = scrcomp + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
  elif user == "ножницы":
      if comp == "бумага":
          print("Ножницы режут бумагу! Вы победили!")
          scruser = scruser + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
      else:
          print("Камень бьет ножницы! Вы проиграли.")
          scrcomp = scrcomp + 1
          print(f"Счёт равен: {scruser}:{scrcomp} ")
  #print(f"Противник выбрал {comp}.")

"""# **Задача 5.**

Создайте игру "Палач" или "Виселица", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.

**Этап 1**
Создать саму игру

**Этап 2:**
Ввести подсчет количества очков и ограничения на попытки

**Этап 3:** Добавить возможность сразу угадать слово
"""

import random
from collections import Counter

someWords = '''банан апельсин яблоко маракуя манго мандарин киви абрикос инжир лимон лайм груша ананас грейпфрут гранат'''

someWords = someWords.split(' ')
# рандомный выбор слова из списка слов.
word = random.choice(someWords)

if __name__ == '__main__':
    print('Угадайте фрукт!')

    for i in word:
        # Вывод пустых ячеек без угаданных букв
        print('_', end=' ')
    print()
    chances = len(word) + 2
    print(f'У вас будет {chances} попыток')

    playing = True
    # Список угаданных букв
    letGues = ''
    correct = 0
    flag = 0

    try:
        while (chances != 0) and flag == 0:  # Флаг обновл, когда слово угадано
            print()
            chances -= 1
            try:
                guess = str(input('Введите букву: '))
            except:
                print('Введите только букву!')
                continue

            if not guess.isalpha():
                print('Введите только букву!')
                continue
            elif len(guess) > 1:
                usr = (input('Вы готовы угадать всё слово? д/н: '))
                usr.lower()
                if usr == "д":
                    usr1 = (input("Введите всё слово: "))
                    if usr1 == word:
                        print("Вы угадали слово!")
                        break
                        break
                    else:
                        continue
            # elif len(guess) > 1:
            #     print('Введите только одну букву!')
            #     continue
            # elif guess in letGues:
            #     print('Вы угадали букву!')
            #     continue

            # Если буква угадана правильно
            if guess in word:
                print('Вы угадали букву!')
                # k хранит количество раз, когда угаданная буква встречается в слове
                k = word.count(guess)
                for _ in range(k):
                    # Угад буква доб-ся столько раз, сколько она встречается
                    letGues += guess
            # Ввод слова
            for char in word:
                if char in letGues and (Counter(letGues) != Counter(word)):
                    print(char, end=' ')
                    correct += 1
                # Если пользователь угадал все буквы
                # Когда правильное слово будет угадано
                elif (Counter(letGues) == Counter(word)):
                    # игра заканчивается даже если остались попытки
                    print("Было загадано слово:", end=' ')
                    print(word)
                    flag = 1
                    print('Ура, вы выиграли!')
                    break  # выход из for
                    break  # выход while
                else:
                    print('_', end=' ')

        # Если попытки исчерпаны
        if chances <= 0 and (Counter(letGues) != Counter(word)):
            print()
            print('Вы проиграли! Попробуйте снова.')
            print('Было загадано слово: {}'.format(word))

    except KeyboardInterrupt:
        print()
        print('Bye! Try again.')
        exit()

"""# **Дополнительно: Задача 6.**

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции


Вввод:

```
Введите номер позиции: 1234567890
```

Вывод:

```
8
```
"""

